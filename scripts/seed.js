const { connectDB, query } = require('../config/database');
const { logger } = require('../config/logger'); // <-- correction ici
const { v4: uuidv4 } = require('uuid');

// Donn√©es de base pour peupler la base de donn√©es
const seedData = async () => {
  try {
    await connectDB();
    logger.info('üå± D√©but du seeding de la base de donn√©es...');

    // V√©rification si les donn√©es existent d√©j√†
    const existingSubjects = await query('SELECT COUNT(*) as count FROM subjects');
    if (existingSubjects[0].count > 0) {
      logger.info('‚ö†Ô∏è  Des donn√©es existent d√©j√†, seeding ignor√©');
      return;
    }

    // 1. Cr√©ation des mati√®res
    const subjects = [
      {
        id: uuidv4(),
        name: 'Math√©matiques',
        description: 'Apprentissage des concepts math√©matiques fondamentaux',
        icon: 'üßÆ',
        color: '#3B82F6',
        classLevels: ['6√®me', '5√®me', '4√®me', '3√®me', '2nde', '1√®re', 'Terminale'],
        totalLessons: 0
      },
      {
        id: uuidv4(),
        name: 'Fran√ßais',
        description: 'Ma√Ætrise de la langue fran√ßaise et de la litt√©rature',
        icon: 'üìö',
        color: '#EF4444',
        classLevels: ['6√®me', '5√®me', '4√®me', '3√®me', '2nde', '1√®re', 'Terminale'],
        totalLessons: 0
      },
      {
        id: uuidv4(),
        name: 'Histoire-G√©ographie',
        description: 'D√©couverte de l\'histoire et de la g√©ographie',
        icon: 'üåç',
        color: '#10B981',
        classLevels: ['6√®me', '5√®me', '4√®me', '3√®me', '2nde', '1√®re', 'Terminale'],
        totalLessons: 0
      },
      {
        id: uuidv4(),
        name: 'Sciences Physiques',
        description: 'Physique et chimie pour tous les niveaux',
        icon: '‚öóÔ∏è',
        color: '#8B5CF6',
        classLevels: ['6√®me', '5√®me', '4√®me', '3√®me', '2nde', '1√®re', 'Terminale'],
        totalLessons: 0
      },
      {
        id: uuidv4(),
        name: 'Sciences de la Vie et de la Terre',
        description: 'Biologie et sciences de la terre',
        icon: 'üî¨',
        color: '#F59E0B',
        classLevels: ['6√®me', '5√®me', '4√®me', '3√®me', '2nde', '1√®re', 'Terminale'],
        totalLessons: 0
      },
      {
        id: uuidv4(),
        name: 'Anglais',
        description: 'Apprentissage de la langue anglaise',
        icon: 'üá¨üáß',
        color: '#06B6D4',
        classLevels: ['6√®me', '5√®me', '4√®me', '3√®me', '2nde', '1√®re', 'Terminale'],
        totalLessons: 0
      }
    ];

    for (const subject of subjects) {
      await query(
        'INSERT INTO subjects (id, name, description, icon, color, class_levels, total_lessons) VALUES (?, ?, ?, ?, ?, ?, ?)',
        [subject.id, subject.name, subject.description, subject.icon, subject.color, JSON.stringify(subject.classLevels), subject.totalLessons]
      );
    }
    logger.info('‚úÖ Mati√®res cr√©√©es');

    // 2. Cr√©ation des le√ßons d'exemple pour les math√©matiques
    const mathSubjectId = subjects[0].id;
    const mathLessons = [
      {
        id: uuidv4(),
        subjectId: mathSubjectId,
        title: 'Introduction aux fractions',
        description: 'D√©couverte des fractions et de leur utilisation',
        content: 'Les fractions repr√©sentent une partie d\'un tout. Le num√©rateur indique combien de parts on prend, le d√©nominateur indique en combien de parts le tout est divis√©.',
        estimatedDuration: 30,
        difficulty: 'easy',
        pointsReward: 25,
        orderIndex: 1
      },
      {
        id: uuidv4(),
        subjectId: mathSubjectId,
        title: 'Addition et soustraction de fractions',
        description: 'Apprendre √† additionner et soustraire des fractions',
        content: 'Pour additionner ou soustraire des fractions, il faut d\'abord les r√©duire au m√™me d√©nominateur, puis additionner ou soustraire les num√©rateurs.',
        estimatedDuration: 45,
        difficulty: 'medium',
        pointsReward: 30,
        orderIndex: 2
      },
      {
        id: uuidv4(),
        subjectId: mathSubjectId,
        title: 'Multiplication et division de fractions',
        description: 'Ma√Ætriser la multiplication et la division des fractions',
        content: 'Pour multiplier des fractions, on multiplie les num√©rateurs entre eux et les d√©nominateurs entre eux. Pour diviser, on multiplie par l\'inverse.',
        estimatedDuration: 50,
        difficulty: 'hard',
        pointsReward: 35,
        orderIndex: 3
      }
    ];

    for (const lesson of mathLessons) {
      await query(
        'INSERT INTO lessons (id, subject_id, title, description, content, estimated_duration, difficulty, points_reward, order_index) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)',
        [lesson.id, lesson.subjectId, lesson.title, lesson.description, lesson.content, lesson.estimatedDuration, lesson.difficulty, lesson.pointsReward, lesson.orderIndex]
      );
    }
    logger.info('‚úÖ Le√ßons de math√©matiques cr√©√©es');

    // 3. Cr√©ation des quiz d'exemple
    const quizData = {
      id: uuidv4(),
      lessonId: mathLessons[0].id,
      subjectId: mathSubjectId,
      title: 'Quiz sur les fractions',
      description: 'Testez vos connaissances sur les fractions',
      questions: JSON.stringify([
        {
          id: 'q1',
          question: 'Que repr√©sente le num√©rateur dans une fraction ?',
          options: [
            'Le nombre de parts prises',
            'Le nombre total de parts',
            'La valeur de la fraction',
            'Le d√©nominateur'
          ],
          correctAnswer: 0,
          explanation: 'Le num√©rateur indique combien de parts on prend du tout.'
        },
        {
          id: 'q2',
          question: 'Dans la fraction 3/4, que repr√©sente le 4 ?',
          options: [
            'Le num√©rateur',
            'Le d√©nominateur',
            'La valeur totale',
            'Le r√©sultat'
          ],
          correctAnswer: 1,
          explanation: 'Le 4 est le d√©nominateur, il indique en combien de parts le tout est divis√©.'
        },
        {
          id: 'q3',
          question: 'Quelle fraction repr√©sente la moiti√© ?',
          options: [
            '1/3',
            '2/4',
            '3/6',
            '2/4 et 3/6'
          ],
          correctAnswer: 3,
          explanation: '1/2 = 2/4 = 3/6, toutes ces fractions repr√©sentent la moiti√©.'
        }
      ]),
      timeLimit: 10,
      passingScore: 250
    };

    await query(
      'INSERT INTO quizzes (id, lesson_id, subject_id, title, description, questions, time_limit, passing_score) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',
      [quizData.id, quizData.lessonId, quizData.subjectId, quizData.title, quizData.description, quizData.questions, quizData.timeLimit, quizData.passingScore]
    );
    logger.info('‚úÖ Quiz cr√©√©');

    // 4. Cr√©ation des succ√®s
    const achievements = [
      {
        id: uuidv4(),
        title: 'Premier pas',
        description: 'Terminez votre premi√®re le√ßon',
        icon: 'üë∂',
        points: 50,
        rarity: 'common',
        requirements: JSON.stringify({ type: 'lesson_completed', count: 1 })
      },
      {
        id: uuidv4(),
        title: '√âtudiant assidu',
        description: 'Terminez 10 le√ßons',
        icon: 'üìñ',
        points: 200,
        rarity: 'rare',
        requirements: JSON.stringify({ type: 'lesson_completed', count: 10 })
      },
      {
        id: uuidv4(),
        title: 'Ma√Ætre des quiz',
        description: 'Obtenez un score parfait √† un quiz',
        icon: 'üèÜ',
        points: 500,
        rarity: 'legendary',
        requirements: JSON.stringify({ type: 'perfect_quiz_score', count: 1 })
      },
      {
        id: uuidv4(),
        title: 'S√©rie de victoires',
        description: 'Terminez 5 le√ßons cons√©cutives',
        icon: 'üî•',
        points: 300,
        rarity: 'epic',
        requirements: JSON.stringify({ type: 'consecutive_lessons', count: 5 })
      },
      {
        id: uuidv4(),
        title: 'Explorateur',
        description: 'D√©couvrez 3 mati√®res diff√©rentes',
        icon: 'üó∫Ô∏è',
        points: 150,
        rarity: 'rare',
        requirements: JSON.stringify({ type: 'subjects_explored', count: 3 })
      }
    ];

    for (const achievement of achievements) {
      await query(
        'INSERT INTO achievements (id, title, description, icon, points, rarity, requirements) VALUES (?, ?, ?, ?, ?, ?, ?)',
        [achievement.id, achievement.title, achievement.description, achievement.icon, achievement.points, achievement.rarity, achievement.requirements]
      );
    }
    logger.info('‚úÖ Succ√®s cr√©√©s');

    // 5. Mise √† jour du nombre de le√ßons par mati√®re
    await query('UPDATE subjects SET total_lessons = (SELECT COUNT(*) FROM lessons WHERE subject_id = subjects.id)');
    logger.info('‚úÖ Compteurs de le√ßons mis √† jour');

    logger.info('üéâ Seeding termin√© avec succ√®s !');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erreur lors du seeding:', error);
    process.exit(1);
  }
};

// Ex√©cution du script
if (require.main === module) {
  seedData();
}

module.exports = { seedData };
